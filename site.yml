- hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: tempfile for kubeconfig
      tempfile:
        state: file
      register: kubeconfig

    - name: generate local kubeconfig
      copy:
        dest: "{{ kubeconfig.path }}"
        content: |
          apiVersion: v1
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: {{ lookup('env', 'K8S_API_URL') }}
            name: supervisor
          contexts:
          - context:
              cluster: supervisor
              user: cluster-user
            name: supervisor
          current-context: supervisor
          kind: Config
          preferences: {}
          users:
          - name: cluster-user
            user:
          {% if lookup('env', 'K8S_API_TOKEN') %}
              token: "{{ lookup('env', 'K8S_API_TOKEN') }}"
          {% else %}
              username: {{ lookup('env', 'K8S_API_USERNAME') }}
              password: {{ lookup('env', 'K8S_API_PASSWORD') }}
          {% endif %}

    - module_defaults:
        kubernetes.core.k8s:
          kubeconfig: "{{ kubeconfig.path }}"
        kubernetes.core.k8s_info:
          kubeconfig: "{{ kubeconfig.path }}"
      block:
        - name: create erdemo-operator-system
          kubernetes.core.k8s:
            definition:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: erdemo-operator-system
              spec: {}

        - name: ensure OperatorGroup exists
          kubernetes.core.k8s:
            definition:
              apiVersion: operators.coreos.com/v1
              kind: OperatorGroup
              metadata:
                name: erdemo-operator-system-og
                namespace: erdemo-operator-system
              spec:
                targetNamespaces:
                  - erdemo-operator-system

        - name: create CatalogSource for erdemo-operators
          kubernetes.core.k8s:
            definition:
              apiVersion: operators.coreos.com/v1alpha1
              kind: CatalogSource
              metadata:
                name: erdemo-operators
                namespace: openshift-marketplace
              spec:
                sourceType: grpc
                image: quay.io/agoossen/erdemo-operator-catalog:2.10.4-adam
                displayName: Emergency Response Demo Operator
                publisher: RedHatGov 

        - name: wait for CatalogSource to reach ready
          kubernetes.core.k8s_info:
            api_version: operators.coreos.com/v1alpha1
            kind: CatalogSource
            name: erdemo-operators
            namespace: openshift-marketplace
          register: catalogsource
          until:
            - catalogsource.resources[0].status.connectionState is defined
            - catalogsource.resources[0].status.connectionState.lastObservedState == 'READY'
          delay: 10
          retries: 10

        - name: subscribe to the ErDemo Operator
          kubernetes.core.k8s:
            definition:
              apiVersion: operators.coreos.com/v1alpha1
              kind: Subscription
              metadata:
                name: erdemo-operator
                namespace: erdemo-operator-system
              spec:
                channel: alpha
                installPlanApproval: Automatic
                name: erdemo-operator
                source: erdemo-operators
                sourceNamespace: openshift-marketplace
                startingCSV: erdemo-operator.v2.10.4-adam

        - name: wait for subscription to reach AtLatestKnown status (5 min max)
          kubernetes.core.k8s_info:
            api_version: operators.coreos.com/v1alpha1
            kind: Subscription
            namespace: erdemo-operator-system
            name: erdemo-operator
          register: ersub
          until:
            - ersub.resources[0].status is defined
            - "ersub.resources[0].status.state | lower == 'atlatestknown'"
          delay: 10
          retries: 30

        - name: create ErDemo
          kubernetes.core.k8s:
            definition:
              apiVersion: apps.erdemo.io/v1alpha1
              kind: ErDemo
              metadata:
                name: erdemo
                namespace: erdemo-operator-system
              spec:
                mapToken: "{{ mapbox_token }}"
